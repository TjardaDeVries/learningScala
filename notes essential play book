Vanilla SBT vs Play SBT
=======================
Play is distributed in two components:
* a set of libraries used by our web applications at runtime;
* an SBT plugin that customises the default behaviour of SBT, adding and altering commands to help us build applications for the web.
This section covers the behaviour of SBT with the Play plugin activated.

FUNDAMENTAL CONCEPTS
====================
Actions         Actions are functions from Requests to Results
Controllers     Controllers are collections of action-producing methods
Routes          Routes map incoming Requests to Action-producing method calls on our Controllers.
Requests
Results

Actions
=======
Actions are objects that handle web requests. They have an apply method that accepts a play.api.mvc.Request and returns a play.api.mvc.Result. We create them using one of several apply methods on the play.api.mvc.Action companion:

import play.api.mvc.Action

Action { request =>
  Ok("Hello, world!")
}

Controllers
===========
These are singleton objects that contain action-producing methods.

Routes
======
We use routes to dispatch incoming requests to Actions. Routes choose Actions based on the HTTP method and path of the request.

GET /      controllers.HelloController.hello
GET /:name controllers.HelloController.helloTo(name: String)

Note that Actions and Controllers have different lifetimes. Controllers are created when our application boots and persist until it shuts down. Actions are created and executed in response to incoming Requests and have a much shorter lifespan. Play passes parameters from our routes to the method that creates the Action, not to the action itself.



